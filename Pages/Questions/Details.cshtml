@page
@model QuizManager.Pages.Questions.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Question</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Question.QuizName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Question.QuizName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Question.QuestionContent)
        </dt>
        <dd class="col-sm-10 questionContent">
            @Html.DisplayFor(model => model.Question.QuestionContent)
        </dd>
    </dl>
    <p>
        <a asp-page="/Answers/Create" class="create res">Create a new Answer</a>
    </p>
    <dl>
        <table class="table">
            <thead>
            <tr>
                <th>
                    Answer Index
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Answer[0].AnswerContent)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Answer[0].AnswerType)
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Answer) {
                
                @if (item.QuestionContent == Model.Question.QuestionContent)
                {
                    <tr class="questionAnswer">
                        <td class="answerIndex"></td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AnswerContent)
                        </td>
                        <td class="answerType">
                            @Html.DisplayFor(modelItem => item.AnswerType)
                        </td>
                        <td>
                            <a asp-page="/Answers/Edit" asp-route-id="@item.AnswerId" class="res">Edit</a> |
                            <a asp-page="/Answers/Details" asp-route-id="@item.AnswerId" class="res">Details</a> |
                            <a asp-page="/Answers/Delete" asp-route-id="@item.AnswerId" class="res">Delete</a>
                        </td>
                    </tr>
                }

            }
            </tbody>
        </table>
    </dl>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.Question.ID">Edit</a> |
    <a class="return btn btn-light" asp-page="/Quizzes/Details">Back to List</a>
</div>

<script>
    questionContent = document.querySelector(".questionContent").innerHTML.trim();
    questionRef = @Model.Question.ID;
    returnLink = document.querySelector(".return");
    createButton = document.querySelector(".create");
    answerIndexes = document.querySelectorAll(".answerIndex");
    indexOption = ['A', 'B', 'C', 'D', 'E'];
    pass = 0;
    fail = 0;
    alertCount = 0;
    window.addEventListener('load', e => {
        returnLink.href = `/Quizzes/Details?id=${@Model.Question.QuizRef}`;
        sessionStorage.removeItem("questionContent");
        sessionStorage.removeItem("questionRef");
        sessionStorage.setItem("questionContent", questionContent);
        sessionStorage.setItem("questionRef", questionRef);
        indexCount = 0;
        answerIndexes.forEach(index => {
            index.innerHTML = `${indexOption[indexCount]} )`;
            indexCount += 1;
        });
    });
    function answerTypeCheck() {
        answerTypes = document.querySelectorAll(".answerType");
        answerTypes.forEach(answer => {
            console.log(answer.innerHTML);
            if (answer.innerHTML.trim() == "Correct") {
                pass += 1;
            } else {
                fail += 1;
            }
        });
    }
    createButton.addEventListener("click", e => {
        answerTypeCheck();
        if (answerTypes.length == 5) {
            e.preventDefault();
            window.alert("A question can have a maximum of five questions");
        }
        if (pass == 2) {
            sessionStorage.setItem("answerType", "Incorrect");
            if (alertCount < 1) {
                window.alert("A question can only have two correct answers");
                alertCount += 1;
            }
        }
        if (fail == 4) {
            sessionStorage.setItem("answerType", "Correct");
            window.alert("A question needs at least 1 correct answer");
        }

    });
    buttons = document.querySelectorAll(".res");
    buttons.forEach(button => {
        console.log(button.innerHTML);
        button.addEventListener("click", (e) => {
            rights = localStorage.getItem("rights");
            if (rights != "Edit") {
                if (button.innerHTML == "Details" && rights == "View") {
                    return;
                } else {
                    e.preventDefault();
                    alert("You do not have the correct access for this.");
                }
                e.preventDefault();
                alert("You do not have the correct access for this.");
            }
            
            
        })
    })

</script>


<script>

</script>